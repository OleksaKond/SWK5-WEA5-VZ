name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "Swk5-rocks!"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "sqlcmd -S localhost -U sa -P Swk5-rocks! -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0

      # Install dependencies
      - name: Install Dependencies
        run: dotnet restore ./src

      # Wait for the database service to become healthy
      - name: Wait for SQL Server
        run: |
          for i in {1..10}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Swk5-rocks! -Q "SELECT 1" && break || sleep 5
          done

      # Run database migrations or initialization
      - name: Initialize Database
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Swk5-rocks! -i ./sql/init-db.sql

      # Build the solution
      - name: Build Solution
        run: dotnet build ./src --configuration Release

      # Run tests
      - name: Run Tests
        run: dotnet test ./tests --logger "trx;LogFileName=test_results.trx"

      # Publish test results
      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: ./tests/TestResults/*.trx
